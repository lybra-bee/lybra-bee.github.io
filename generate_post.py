import datetime
import random
import os
import re
import glob
from groq import Groq
import requests
import yaml  # Для безопасного форматирования YAML

types = ["Обзор", "Урок", "Мастер-класс", "Статья"]

today = datetime.date.today()
type_ = random.choice(types)

posts_dir = '_posts'
assets_dir = 'assets/images/posts'
os.makedirs(assets_dir, exist_ok=True)
os.makedirs(posts_dir, exist_ok=True)

# Определение следующего номера изображения
image_files = glob.glob(f"{assets_dir}/*.png") + glob.glob(f"{assets_dir}/*.jpg")
post_num = len(image_files) + 1 if image_files else 1

post_files = sorted(glob.glob(f"{posts_dir}/*.md"), reverse=True)
if len(post_files) > 39:
    for old_file in post_files[40:]:
        os.remove(old_file)

# Генерация заголовка через Groq API
groq_key = os.getenv("GROQ_API_KEY")
title = "Современные тенденции в искусственном интеллекте"  # заголовок по умолчанию

if groq_key:
    try:
        client = Groq(api_key=groq_key)
        
        # Рандомизация стилей заголовков для разнообразия
        title_styles = [
            "С вопросом для вовлечения: 'Как [тренд] изменит [отрасль] в 2025?'",
            "С цифрой: 'Топ-5 [трендов] в [теме] для 2025 года'",
            "Провокационный: '[Шокирующий факт]: почему [тренд] — будущее ИИ?'",
            "Сторителлинг: 'От [старого] к [новому]: эволюция [темы] в 2025'",
            "Юмористический: 'ИИ в 2025: [смешной сценарий] или реальность?'"
        ]
        random_style = random.choice(title_styles)
        
        title_completion = client.chat.completions.create(
            messages=[
                {
                    "role": "system", 
                    "content": "Ты эксперт по ИИ и высоким технологиям. Создай креативные заголовки на русском языке (5-10 слов) на основе последних трендов в области искусственного интеллекта, машинного обучения и высоких технологий на октябрь 2025 года. Создавай заголовки, которые провоцируют любопытство, используют эмоциональный хук (удивление, страх, вдохновение) и адаптированы под тип статьи (обзор — аналитический, урок — практический). Избегай шаблонов, делай их уникальными каждый раз."
                },
                {
                    "role": "user", 
                    "content": f"Придумай один заголовок {type_.lower()} (5-10 слов) на актуальную тему в области ИИ и высоких технологий. Используй стиль: {random_style}. Добавь элемент сюрприза или уникальный угол. Только заголовок, без пояснений."
                }
            ],
            model="llama-3.1-8b-instant",
            max_tokens=50,
            temperature=0.8
        )
        title = title_completion.choices[0].message.content.strip()
        title = re.sub(r'^["\']|["\']$', '', title)  # Удаление кавычек
        title = re.sub(r'[:]', ' -', title)  # Замена двоеточий
        title = re.sub(r'[^\w\s-]', '', title)  # Удаление специальных символов
        title = re.sub(r'\s+$', '', title)  # Удаление пробелов в конце
        title = title.rstrip('.')  # Удаление точки в конце
        print(f"Заголовок сгенерирован: {title}")
    except Exception as e:
        print(f"Ошибка генерации заголовка: {str(e)}")

slug = re.sub(r'[^а-яА-Яa-zA-Z0-9-]', '-', title.lower().replace(" ", "-"))

# Выбор подтем для разнообразия статей
subthemes = ["Agentic AI и автономные агенты", "RAG для улучшения генерации", "Sovereign AI и национальные модели", "Physical AI в робототехнике", "Этика ИИ и регуляции", "Квантовое машинное обучение", "AI для устойчивого развития", "Edge AI в IoT"]
selected_subthemes = random.sample(subthemes, random.randint(3, 5))
subthemes_str = ', '.join(selected_subthemes)

# Генерация полного текста статьи
content = f"# {title}\n\n## {type_}\n\nОшибка генерации текста. Сгенерируйте вручную."

if groq_key:
    try:
        # Улучшенный system prompt с новым URL лаборатории и сохранением SEO
        system_prompt = """Ты профессиональный автор технических статей по ИИ с 10-летним опытом. Пиши на русском языке увлекательно, как в Forbes или Habr: используй сторителлинг, аналогии, цитаты экспертов (Elon Musk, Andrew Ng), риторические вопросы. Делай контент полезным: включай actionable insights, реальные кейсы (xAI Grok, OpenAI agents, Yandex AI), статистику из 2025 (Gartner: 'AI market $500B', McKinsey: '70% компаний используют AI'). Избегай шаблонов, повторений и filler-текста. Варьируй стиль: мотивирующий для уроков, аналитический для статей. Оптимизируй для SEO: ключевые слова естественно, ссылки на источники (x.ai, habr.com, yandex.ru/blog, mckinsey.com, forbes.com, gartner.com, ibm.com). Добавь ссылку на https://lybra-ai.ru/lybra-ai-lab/ в введении и заключении как хаб для экспериментов. Для разнообразия: рандомно выбирай подтемы из трендов (Agentic AI, RAG, Sovereign AI, Physical AI, AI ethics, quantum ML, AI in sustainability, edge AI). Избегай кода, фокусируйся на insights."""

        # Динамический user prompt в зависимости от type_ с рандомизацией элементов
        if type_ == "Обзор":
            unique_elements = random.choice(["инфографику в виде нумерованных списков", "цитаты от экспертов", "сравнение с прошлыми годами"])
            user_content = f"Напиши обзор на тему '{title}' объемом 1500–3000 слов, интегрируя подтемы {subthemes_str}. Структура: H1 — заголовок, H2 — тип статьи, H2 'Введение' (с хуком-историей, 200 слов), H2 'Ключевые тренды' (4-6 H3 с кейсами, статистикой, аналогиями, 300 слов каждый), H2 'Сравнение технологий' (таблица 4x4 с плюсами/минусами), H2 'Прогнозы на 2026' (3-5 сценариев с обоснованиями, 200 слов), H2 'Заключение' (с вызовом к действию, 150 слов). Добавь {unique_elements}. Используй реальные примеры, избегай кода."
        elif type_ == "Урок":
            unique_elements = random.choice(["чек-листы после шагов", "мотивирующие примеры успеха", "аналогии из повседневной жизни"])
            user_content = f"Напиши урок на тему '{title}' объемом 1500–3000 слов, интегрируя подтемы {subthemes_str}. Структура: H1 — заголовок, H2 — тип статьи, H2 'Введение' (с вопросом, 200 слов), H2 'Подготовка' (2-3 H3 с инструментами, 200 слов), H2 'Шаги урока' (5-8 H3 с практическими инструкциями, примерами, 250 слов каждый), H2 'Сравнение методов' (таблица 3x3), H2 'Практические советы' (5-10 пунктов, 150 слов), H2 'Заключение' (с вопросом, 150 слов). Добавь {unique_elements}. Избегай кода, фокусируйся на шагах."
        elif type_ == "Мастер-класс":
            unique_elements = random.choice(["ролевые сценарии", "реальные кейсы из компаний", "расширенные упражнения"])
            user_content = f"Напиши мастер-класс на тему '{title}' объемом 1500–3000 слов, интегрируя подтемы {subthemes_str}. Структура: H1 — заголовок, H2 — тип статьи, H2 'Введение' (с вопросом, 200 слов), H2 'Необходимые инструменты' (3-5 H3, 200 слов), H2 'Практические упражнения' (4-6 H3 с
