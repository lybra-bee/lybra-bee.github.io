name: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞ –≤ Telegram

on:
  workflow_dispatch:  # –î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞

jobs:
  send_post:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Check post files
        run: |
          ls -l _posts/ || echo "No posts directory found"
      - name: Check extract_post_data.py
        run: |
          ls -l extract_post_data.py || echo "extract_post_data.py not found"
      - name: Extract last post data
        run: |
          python extract_post_data.py
      - name: Check image file
        run: |
          IMAGE_PATH="assets/images/posts/post-${{ env.POST_NUM }}.png"
          ls -l $IMAGE_PATH || echo "Image file $IMAGE_PATH not found in repository"
          if [ -f "$IMAGE_PATH" ]; then
            echo "IMAGE_FOUND=true" >> $GITHUB_ENV
          else
            echo "IMAGE_FOUND=false" >> $GITHUB_ENV
          fi
      - name: Check image URL
        run: |
          IMAGE_URL="https://lybra-ai.ru/assets/images/posts/post-${{ env.POST_NUM }}.png"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$IMAGE_URL")
          echo "Image URL $IMAGE_URL status: HTTP $HTTP_STATUS"
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "IMAGE_URL_ACCESSIBLE=true" >> $GITHUB_ENV
          else
            echo "IMAGE_URL_ACCESSIBLE=false" >> $GITHUB_ENV
          fi
      - name: Escape teaser for MarkdownV2
        run: |
          TEASER="${{ env.TEASER }}"
          if [ -z "$TEASER" ] || [ "$TEASER" = "–¢–∏–∑–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏." ]; then
            echo "TEASER is empty or default, setting default"
            TEASER="–¢–∏–∑–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏."
          fi
          TEASER=$(echo "$TEASER" | head -c 1000)
          TEASER=$(echo "$TEASER" | sed 's/[ _*[\]()~`>#+-=|{}\.!]/\\&/g')
          echo "TEASER_ESCAPED=$TEASER" >> $GITHUB_ENV
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
          MESSAGE="üì¢ –ù–æ–≤—ã–π –ø–æ—Å—Ç: \"${{ env.TITLE }}\"\n\n–ö—Ä–∞—Ç–∫–∏–π —Ç–∏–∑–µ—Ä: $TEASER\n\n–ß–∏—Ç–∞—Ç—å: https://lybra-ai.ru/${{ env.DATE }}/${{ env.SLUG }}?utm_source=telegram&utm_medium=channel&utm_campaign=post\n\n#–ò–ò #–¢—Ä–µ–Ω–¥—ã2025 #LybraAI"
          MESSAGE_LENGTH=$(echo -n "$MESSAGE" | wc -c)
          echo "Message length: $MESSAGE_LENGTH"
          if [ "$MESSAGE_LENGTH" -gt 4096 ]; then
            echo "::error::Message length ($MESSAGE_LENGTH) exceeds Telegram limit of 4096 characters"
            exit 1
          fi
      - name: Log extracted data
        run: |
          echo "TITLE: ${{ env.TITLE }}"
          echo "DATE: ${{ env.DATE }}"
          echo "SLUG: ${{ env.SLUG }}"
          echo "POST_NUM: ${{ env.POST_NUM }}"
          echo "TEASER: ${{ env.TEASER }}"
          echo "TEASER_ESCAPED: ${{ env.TEASER_ESCAPED }}"
          echo "IMAGE_FOUND: ${{ env.IMAGE_FOUND }}"
          echo "IMAGE_URL_ACCESSIBLE: ${{ env.IMAGE_URL_ACCESSIBLE }}"
      - name: Send to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          parse_mode: MarkdownV2
          message: |
            üì¢ –ù–æ–≤—ã–π –ø–æ—Å—Ç: "${{ env.TITLE }}"

            –ö—Ä–∞—Ç–∫–∏–π —Ç–∏–∑–µ—Ä: ${{ env.TEASER_ESCAPED }}"

            –ß–∏—Ç–∞—Ç—å: https://lybra-ai.ru/${{ env.DATE }}/${{ env.SLUG }}?utm_source=telegram&utm_medium=channel&utm_campaign=post

            #–ò–ò #–¢—Ä–µ–Ω–¥—ã2025 #LybraAI
          photo: |
            ${{ env.IMAGE_URL_ACCESSIBLE == 'true' && format('https://lybra-ai.ru/assets/images/posts/post-{0}.png', env.POST_NUM) || '' }}
      - name: Log Telegram step
        run: |
          echo "TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}"
          echo "Post title: ${{ env.TITLE }}"
          echo "Teaser escaped: ${{ env.TEASER_ESCAPED }}"
          echo "URL: https://lybra-ai.ru/${{ env.DATE }}/${{ env.SLUG }}"
          echo "Image URL: https://lybra-ai.ru/assets/images/posts/post-${{ env.POST_NUM }}.png"
