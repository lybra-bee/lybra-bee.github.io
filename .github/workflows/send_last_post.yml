name: üì¢ Publish Last Post to Telegram

on:
  workflow_dispatch:      # üëâ –∑–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é
  schedule:
    - cron: '0 8 * * *'   # üëâ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 8:00 UTC (11:00 –ú–°–ö)

jobs:
  send_post:
    name: üöÄ Extract Last Post and Send to Telegram
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python
      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml transliterate

      # 4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
      - name: üîç Check files
        run: |
          ls -l _posts/ || echo "No posts directory found"
          if [ -z "$(ls -A _posts/)" ]; then
            echo "::error::No Markdown files found in _posts/"
            exit 1
          fi
          for f in extract_post_data.py escape_markdown.py; do
            if [ ! -f "$f" ]; then
              echo "::error::$f not found"
              exit 1
            fi
          done

      # 5Ô∏è‚É£ –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞
      - name: üß† Extract last post data
        run: |
          python extract_post_data.py

      # 6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      - name: ‚úÖ Validate extracted data
        run: |
          if [ -z "$TITLE" ]; then echo "::error::TITLE is empty"; exit 1; fi
          if [ -z "$DATE" ]; then echo "::error::DATE is empty"; exit 1; fi
          if [ -z "$SLUG" ]; then echo "::error::SLUG is empty"; exit 1; fi
          if [ -z "$IMAGE_URL" ]; then echo "::error::IMAGE_URL is empty"; exit 1; fi

      # 7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      - name: üñºÔ∏è Check image URL
        run: |
          echo "Checking image URL: $IMAGE_URL"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --location --connect-timeout 5 "$IMAGE_URL")
          echo "Image URL $IMAGE_URL status: HTTP $HTTP_STATUS"
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "PHOTO_URL=$IMAGE_URL" >> $GITHUB_ENV
          else
            echo "::warning::Image not accessible, using default"
            echo "PHOTO_URL=https://lybra-bee.github.io/assets/images/default.png" >> $GITHUB_ENV
          fi

      # 8Ô∏è‚É£ –§–æ—Ä–º–∏—Ä—É–µ–º Telegram-—Å–æ–æ–±—â–µ–Ω–∏–µ
      - name: ‚úèÔ∏è Prepare Telegram message
        run: |
          python escape_markdown.py
          MESSAGE_LENGTH=$(echo -n "$MESSAGE" | wc -c)
          echo "Message length: $MESSAGE_LENGTH"
          if [ "$MESSAGE_LENGTH" -gt 4096 ]; then
            echo "::error::Message exceeds Telegram limit"
            exit 1
          fi

      # 9Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
      - name: üì¨ Send to Telegram
        uses: appleboy/telegram-action@v1.0.1
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdownv2
          message: ${{ env.MESSAGE }}
          photo: ${{ env.PHOTO_URL }}

      # üîü –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      - name: üßæ Debug info
        if: always()
        run: |
          echo "TITLE: $TITLE"
          echo "DATE: $DATE"
          echo "SLUG: $SLUG"
          echo "IMAGE_URL: $IMAGE_URL"
          echo "PHOTO_URL: $PHOTO_URL"
          echo "MESSAGE:"
          echo "$MESSAGE"
