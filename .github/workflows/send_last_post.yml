name: üì¢ Publish Last Post to Telegram

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "_posts/**"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: üì¶ Install dependencies
        run: |
          pip install PyYAML requests

      - name: üöÄ Extract Last Post and Send to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          import os, glob, yaml, re, requests

          # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç
          posts = sorted(glob.glob('_posts/*.md'), reverse=True)
          if not posts:
              raise SystemExit("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ _posts/")
          last_post = posts[0]

          with open(last_post, encoding='utf-8') as f:
              content = f.read()

          # –ö–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ front-matter
          parts = content.split('---')
          body = parts[-1].strip() if len(parts) > 1 else content.strip()

          # –¢–∏–∑–µ—Ä: –ø–µ—Ä–≤—ã–µ 30 —Å–ª–æ–≤
          words = body.split()
          teaser = ' '.join(words[:30]) + ('‚Ä¶' if len(words) > 30 else '')

          # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ MarkdownV2
          def esc(text):
              return re.sub(r'([_*\[\]()~`>#+\-=|{}.!])', r'\\\1', text)

          teaser_esc = esc(teaser)
          hashtags_esc = esc("#–ò–ò #LybraAI")

          # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–∞—Ä—Å–∏—Ç—å front-matter
          front_matter = {}
          if len(parts) > 1:
              try:
                  front_matter = yaml.safe_load(parts[1])
              except yaml.YAMLError as e:
                  print(f"‚ùå –û—à–∏–±–∫–∞ –≤ front-matter: {e}")
          
          # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ front-matter
          image_name = os.path.basename(front_matter.get('image', 'post-1.png'))
          image_url = f"https://lybra-bee.github.io/assets/images/posts/{image_name}"

          # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç
          site_url = "https://lybra-ai.ru"

          # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
          message = f"*–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è*\n\n{teaser_esc}\n\n[–ß–∏—Ç–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ]({site_url})\n\n{hashtags_esc}"

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ —á–∞—Ç–∞
          token = os.getenv('TELEGRAM_BOT_TOKEN')
          chat_id = os.getenv('TELEGRAM_CHAT_ID')
          if not token or not chat_id:
              raise SystemExit("‚ùå –ù–µ—Ç TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID")

          # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –≤ Telegram
          resp = requests.post(
              f"https://api.telegram.org/bot{token}/sendPhoto",
              data={
                  "chat_id": chat_id,
                  "photo": image_url,
                  "caption": message,
                  "parse_mode": "MarkdownV2"
              }
          )

          print(f"‚úÖ Telegram –æ—Ç–≤–µ—Ç: {resp.status_code} ‚Äî {resp.text[:200]}")
        shell: python
