name: üì¢ Publish Last Post to Telegram

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "_posts/**"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: üì¶ Install dependencies
        run: |
          pip install PyYAML requests

      - name: üöÄ Extract Last Post and Send to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          import os, glob, yaml, re, requests

          posts = sorted(glob.glob('_posts/*.md'), reverse=True)
          if not posts:
              raise SystemExit("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ _posts/")
          last_post = posts[0]

          with open(last_post, encoding='utf-8') as f:
              content = f.read()

          front_matter = re.search(r'^---(.*?)---', content, re.S)
          if not front_matter:
              raise SystemExit("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω front matter –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø–æ—Å—Ç–µ")

          meta = yaml.safe_load(front_matter.group(1))
          title = meta.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
          date = str(meta.get('date', ''))
          slug = os.path.splitext(os.path.basename(last_post))[0].split('-', 3)[-1]
          teaser = meta.get('excerpt', '') or re.sub(r'<.*?>', '', content.split('---')[-1]).strip().split('\n')[0]
          teaser = teaser[:200] + '‚Ä¶' if len(teaser) > 200 else teaser

          # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          base_url = "https://lybra-bee.github.io/assets/images/posts/"
          post_index = len(posts)
          image_name = f"post-{post_index}.png"
          image_url = base_url + image_name

          # –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø–æ—Å—Ç–∞
          url = f"https://lybra-bee.github.io/{date[:10].replace('-', '/')}/{slug}.html"

          # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Markdown
          def esc(t):
              return re.sub(r'([_*\[\]()~`>#+\-=|{}.!])', r'\\\1', t)

          title_esc = esc(title)
          teaser_esc = esc(teaser)

          message = f"üì¢ *–ù–æ–≤—ã–π –ø–æ—Å—Ç*: \"{title_esc}\"\n\n*–ö—Ä–∞—Ç–∫–∏–π —Ç–∏–∑–µ—Ä*: {teaser_esc}\n\n[–ß–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å—é]({url})\n\n#–ò–ò #LybraAI"

          token = os.getenv('TELEGRAM_BOT_TOKEN')
          chat_id = os.getenv('TELEGRAM_CHAT_ID')

          if not token or not chat_id:
              raise SystemExit("‚ùå –ù–µ—Ç TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID")

          resp = requests.post(
              f"https://api.telegram.org/bot{token}/sendPhoto",
              data={
                  "chat_id": chat_id,
                  "photo": image_url,
                  "caption": message,
                  "parse_mode": "MarkdownV2"
              }
          )

          print(f"‚úÖ Telegram –æ—Ç–≤–µ—Ç: {resp.status_code} ‚Äî {resp.text[:200]}")

        shell: python
