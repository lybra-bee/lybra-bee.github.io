#!/usr/bin/env python3
import os
import json
import requests
import random
from datetime import datetime
import shutil
import yaml
import logging
from slugify import slugify

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –ü—É—Ç–∏
POSTS_DIR = "content/posts"
IMAGES_DIR = "static/images/posts"
GALLERY_YAML = "data/gallery.yaml"
GALLERY_JSON = "data/gallery.json"

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Ç–∞—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å—Ç–∞–≤–ª—è–µ–º
KEEP_LAST_N = 5

# –ü—Ä–∏–º–µ—Ä—ã —Ç–µ–≥–æ–≤
TAGS = ["ai", "tech", "–Ω–µ–π—Ä–æ—Å–µ—Ç–∏"]

# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
PLACEHOLDER_IMAGE = "static/images/placeholder.jpg"

# ------------------------
# –£—Ç–∏–ª–∏—Ç—ã
# ------------------------

def save_article(title, text):
    slug = slugify(title)
    filename = os.path.join(POSTS_DIR, f"{slug}.md")
    logging.info(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—å—é –≤ {filename}")
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –∏ —É–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
    safe_title = title.replace('"', '\\"').replace('\n', ' ').strip()
    
    with open(filename, "w", encoding="utf-8") as f:
        f.write(
            f"---\n"
            f"title: \"{safe_title}\"\n"
            f"date: '{datetime.now().strftime('%Y-%m-%d')}'\n"
            f"slug: {slug}\n"
            f"tags: {json.dumps(TAGS)}\n"
            f"---\n\n"
            f"{text}\n"
        )
    return filename

def update_gallery():
    """–°–æ–∑–¥–∞—ë–º –≥–∞–ª–µ—Ä–µ—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ static/images/posts"""
    gallery_items = []
    for filename in sorted(os.listdir(IMAGES_DIR)):
        if not filename.lower().endswith((".jpg", ".jpeg", ".png", ".svg")):
            continue
        title = os.path.splitext(filename)[0].replace("-", " ").capitalize()
        gallery_items.append({
            "src": f"/images/posts/{filename}",
            "title": title,
            "alt": title,
            "date": datetime.now().strftime("%Y-%m-%d")
        })
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º YAML
    with open(GALLERY_YAML, "w", encoding="utf-8") as f:
        yaml.safe_dump(gallery_items, f, allow_unicode=True)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON
    with open(GALLERY_JSON, "w", encoding="utf-8") as f:
        json.dump(gallery_items, f, ensure_ascii=False, indent=2)

    logging.info(f"üñº –ì–∞–ª–µ—Ä–µ—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {len(gallery_items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")

def cleanup_old_articles():
    """–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∞—Ç—å–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ KEEP_LAST_N"""
    posts = sorted(
        [f for f in os.listdir(POSTS_DIR) if f.endswith(".md")],
        key=lambda x: os.path.getmtime(os.path.join(POSTS_DIR, x)),
        reverse=True
    )
    to_delete = posts[KEEP_LAST_N:]
    for f in to_delete:
        os.remove(os.path.join(POSTS_DIR, f))
        logging.info(f"üóë –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Å—Ç–∞—Ç—å—è: {f}")

# ------------------------
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏
# ------------------------

def generate_article():
    """
    –ó–∞–≥–ª—É—à–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞.
    –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å OpenRouter, Groq –∏–ª–∏ –ª—é–±—É—é –º–æ–¥–µ–ª—å –ò–ò.
    """
    # –ü—Ä–∏–º–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ ‚Äî —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π, —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –ò–ò –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö
    examples = [
        "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ –º–µ–¥–∏—Ü–∏–Ω–µ: –∫–∞–∫ –ò–ò –ø–æ–º–æ–≥–∞–µ—Ç –≤—Ä–∞—á–∞–º",
        "–°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç-–±–æ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏: –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
        "–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–¥–∞–Ω–∏–π",
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é –ò–ò",
        "–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
        "–ò–ò –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö: –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞ –∏ –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤"
    ]
    title = random.choice(examples)
    text = f"–≠—Ç–æ —Å—Ç–∞—Ç—å—è —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º ¬´{title}¬ª. –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏, —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏."
    
    return title, text

def main():
    os.makedirs(POSTS_DIR, exist_ok=True)
    os.makedirs(IMAGES_DIR, exist_ok=True)
    
    # 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π
    cleanup_old_articles()
    
    # 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
    title, text = generate_article()
    save_article(title, text)
    
    # 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏
    update_gallery()

if __name__ == "__main__":
    main()
